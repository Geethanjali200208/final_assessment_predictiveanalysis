# -*- coding: utf-8 -*-
"""LVADSUSR87-geethanjaliLab4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tN95h1MnxW2YzNOj0R4nqlPc2k1XOlUb
"""

# Anamoly
import pandas as pd
from sklearn.ensemble import IsolationForest
import warnings
warnings.filterwarnings('ignore')
import matplotlib.pyplot as plt

df = pd.read_csv("/content/social_network.csv")

# Features for anomaly detection
features = ["login_activity", "posting_activity", "social_connections"]

# features dataframe
X = df[features]
model = IsolationForest()
model.fit(X)

# Prediction of anomalies
y_pred = model.predict(X)


# Add the predicted anomaly scores to the original dataframe
df["anomaly_score"] = model.decision_function(X)

anomalies = df.loc[df["anomaly_score"] < 0]

print(anomalies)
# predict
df_test= pd.read_csv("/content/social_network.csv")
x=df_test[["login_activity", "posting_activity", "social_connections"]]
df_values=x.values

find=df_values

result=[]
for i in find:
  z=model.predict([i])
  if z==[1]:
    result.append('Not Anomaly')
  elif z==[-1]:
    result.append('Anomaly')

df_test['Anomaly']=result
print(df_test)

# Create a scatter plot of suspicious activity vs social connections

plt.scatter(df["social_connections"], df["anomaly_score"], label="Not Anomaly")
plt.scatter(anomalies["social_connections"], anomalies["anomaly_score"], color="r", label="Anomaly")
plt.xlabel("Social Connections")
plt.ylabel("anomaly_score")
plt.legend()
plt.show()
df_test.head()